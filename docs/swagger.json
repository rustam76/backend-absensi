{
    "swagger": "2.0",
    "info": {
        "description": "REST API untuk sistem absensi",
        "title": "Absensi API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3030",
    "basePath": "/api",
    "paths": {
        "/api/attendance/clock-in": {
            "post": {
                "description": "Employee clock in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Clock in attendance",
                "parameters": [
                    {
                        "description": "Attendance data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Attendance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Attendance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/attendance/clock-out/{id}": {
            "put": {
                "description": "Employee clock out",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Clock out attendance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attendance ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee ID",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Attendance"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/attendance/logs": {
            "get": {
                "description": "Get attendance logs with filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Attendance"
                ],
                "summary": "Get attendance logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Departement ID",
                        "name": "departement_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employee_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AttendanceLogResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/departement/{id}": {
            "get": {
                "description": "Get a specific department by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Get department by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing department",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Update a department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated department",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a department by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Delete a department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/departements": {
            "get": {
                "description": "Get a list of all departments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Get all departments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DepartmentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new department based on request body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Department"
                ],
                "summary": "Create a new department",
                "parameters": [
                    {
                        "description": "Department to create",
                        "name": "departement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.DepartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/employee/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Update an employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee payload",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employee": {
            "get": {
                "description": "Get a list of all employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get all employees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.EmployeeResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create new employee",
                "parameters": [
                    {
                        "description": "Employee details",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "description": "Get details of a specific employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get an employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmployeeResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete employee by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Delete employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employeeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponseDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AttendanceLogResponse": {
            "type": "object",
            "properties": {
                "attendance_id": {
                    "type": "string"
                },
                "clock_in": {
                    "type": "string"
                },
                "clock_out": {
                    "type": "string"
                },
                "date_attendance": {
                    "type": "string"
                },
                "departement_name": {
                    "type": "string"
                },
                "employee_name": {
                    "type": "string"
                },
                "is_late": {
                    "type": "string"
                },
                "is_leave_early": {
                    "type": "string"
                },
                "max_clock_in_time": {
                    "type": "string"
                },
                "max_clock_out_time": {
                    "type": "string"
                },
                "status_clock_in": {
                    "type": "string"
                },
                "status_clock_out": {
                    "type": "string"
                }
            }
        },
        "dto.DepartmentRequest": {
            "type": "object",
            "properties": {
                "departement_name": {
                    "type": "string"
                },
                "max_clock_in_time": {
                    "type": "string"
                },
                "max_clock_out_time": {
                    "type": "string"
                }
            }
        },
        "dto.DepartmentResponse": {
            "type": "object",
            "properties": {
                "departement_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "max_clock_in_time": {
                    "type": "string"
                },
                "max_clock_out_time": {
                    "type": "string"
                }
            }
        },
        "dto.EmployeeRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Jl. Sudirman No. 1"
                },
                "departement_id": {
                    "type": "integer",
                    "example": 2
                },
                "employee_id": {
                    "type": "string",
                    "example": "EMP001"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                }
            }
        },
        "dto.EmployeeResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "departement_id": {
                    "type": "integer"
                },
                "departement_name": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.LoginResponseDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIs..."
                },
                "user": {
                    "$ref": "#/definitions/dto.LoginUserInfoResponseDTO"
                }
            }
        },
        "dto.LoginUserInfoResponseDTO": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "departement": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "string"
                },
                "max_clock_in_time": {
                    "type": "string"
                },
                "max_clock_out_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Attendance": {
            "type": "object",
            "properties": {
                "attendance_id": {
                    "type": "string"
                },
                "clock_in": {
                    "type": "string"
                },
                "clock_out": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "employee": {
                    "$ref": "#/definitions/model.Employee"
                },
                "employee_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Departement": {
            "type": "object",
            "properties": {
                "departement_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "max_clock_in_time": {
                    "type": "string"
                },
                "max_clock_out_time": {
                    "type": "string"
                }
            }
        },
        "model.Employee": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "departement_id": {
                    "type": "integer"
                },
                "departements": {
                    "$ref": "#/definitions/model.Departement"
                },
                "employee_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}